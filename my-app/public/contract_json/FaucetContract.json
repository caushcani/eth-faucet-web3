{
  "contractName": "FaucetContract",
  "abi": [
    {
      "stateMutability": "payable",
      "type": "receive",
      "payable": true
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/FaucetContract.sol\":\"FaucetContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/FaucetContract.sol\":{\"keccak256\":\"0x1a026389dcff7fa66749823612b3123b3723eadc253435e8b62ca46536a70b89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e279e1ac4562ae6ffd1bb3cb1ca8b71807a301230771e6fb88ccdc3a20e4aa14\",\"dweb:/ipfs/QmWdRWs9mCoDAffwm9bRBXY4kxbC4bhSPtyrqF1z9bShKP\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060be8061001f6000396000f3fe608060405260043610601f5760003560e01c80633ccfd60b14602a576025565b36602557005b600080fd5b60306032565b005b60003390508073ffffffffffffffffffffffffffffffffffffffff166108fc670de0b6b3a76400009081150290604051600060405180830381858888f193505050501580156084573d6000803e3d6000fd5b505056fea2646970667358221220492a80f8d56b4edb2c19e614d1656d3f4b9a8dadd3db0219a48f3601ff85779564736f6c63430008110033",
  "deployedBytecode": "0x608060405260043610601f5760003560e01c80633ccfd60b14602a576025565b36602557005b600080fd5b60306032565b005b60003390508073ffffffffffffffffffffffffffffffffffffffff166108fc670de0b6b3a76400009081150290604051600060405180830381858888f193505050501580156084573d6000803e3d6000fd5b505056fea2646970667358221220492a80f8d56b4edb2c19e614d1656d3f4b9a8dadd3db0219a48f3601ff85779564736f6c63430008110033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "150:355:0:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "150:355:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;297:205;;;:::i;:::-;;;345:24;380:10;345:46;;455:8;447:26;;:47;474:19;447:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;334:168;297:205::o",
  "source": "// SPDX-License-Identifier: MIT\r\n// compiler version must be greater than or equal to 0.8.17 and less than 0.9.0\r\npragma solidity >=0.8.17 <0.9.0;\r\n\r\ncontract FaucetContract {\r\n    // Function to receive Ether. msg.data must be empty\r\n    receive() external payable {}\r\n\r\n    //withdraw  eth\r\n    function withdraw() external payable {\r\n        address payable receiver = payable(msg.sender);\r\n        //1 ether = 1000000000000000000 wei\r\n        payable(receiver).transfer(1000000000000000000);\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\Users\\User\\Desktop\\eth-faucet\\contracts\\FaucetContract.sol",
  "ast": {
    "absolutePath": "project:/contracts/FaucetContract.sol",
    "exportedSymbols": {
      "FaucetContract": [
        26
      ]
    },
    "id": 27,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".17",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "114:32:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "FaucetContract",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 26,
        "linearizedBaseContracts": [
          26
        ],
        "name": "FaucetContract",
        "nameLocation": "159:14:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 4,
              "nodeType": "Block",
              "src": "266:2:0",
              "statements": []
            },
            "id": 5,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "246:2:0"
            },
            "returnParameters": {
              "id": 3,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "266:0:0"
            },
            "scope": 26,
            "src": "239:29:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 24,
              "nodeType": "Block",
              "src": "334:168:0",
              "statements": [
                {
                  "assignments": [
                    9
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9,
                      "mutability": "mutable",
                      "name": "receiver",
                      "nameLocation": "361:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 24,
                      "src": "345:24:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 8,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "345:15:0",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 12,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "380:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 13,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "384:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "380:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 11,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "372:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 10,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "372:8:0",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 14,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "372:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "345:46:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31303030303030303030303030303030303030",
                        "id": 21,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "474:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1000000000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 18,
                            "name": "receiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9,
                            "src": "455:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 17,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "447:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 16,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "447:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "447:17:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 20,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "465:8:0",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "447:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 22,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "447:47:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23,
                  "nodeType": "ExpressionStatement",
                  "src": "447:47:0"
                }
              ]
            },
            "functionSelector": "3ccfd60b",
            "id": 25,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "306:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "314:2:0"
            },
            "returnParameters": {
              "id": 7,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "334:0:0"
            },
            "scope": 26,
            "src": "297:205:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 27,
        "src": "150:355:0",
        "usedErrors": []
      }
    ],
    "src": "114:393:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.17+commit.8df45f5f.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xf9570CBf7E7B2B7Caf97f1b5cfD61535B0A5eC0d",
      "transactionHash": "0x28cd6d18ae8c15fffacea85896d5aa55efb0e0598ae348920d09edcb1ef42f96"
    }
  },
  "schemaVersion": "3.4.14",
  "updatedAt": "2023-05-26T20:06:21.216Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}